/*
Create a function, that accepts an arbitrary number of arrays and returns a single array generated by alternately appending elements from the passed in arguments. If one of them is shorter than the others, the result should be padded with empty elements.

Examples:

interleave([1, 2, 3], ["c", "d", "e"]) === [1, "c", 2, "d", 3, "e"]
interleave([1, 2, 3], [4, 5]) === [1, 4, 2, 5, 3, null]
interleave([1, 2, 3], [4, 5, 6], [7, 8, 9]) === [1, 4, 7, 2, 5, 8, 3, 6, 9]
interleave([]) === []
*/
function interleave(...arrays) {
  const maximum = Math.max(...arrays.map(a => a.length));
  const result = new Array(arrays.length * maximum).fill(null);
  for (let i = 0, x = 0, y = -1; i < result.length; i++, x++) {
    if (0 === i % arrays.length) [x, y] = [0, y + 1];
    if (y < arrays[x].length) result[i] = arrays[x][y];
  }
  return result;
}

function interleave(...input) {
  let result = [];
  let maxLength = Math.max(...input.map((arr) => arr.length));

  for (let i = 0; i < maxLength; i++) {
      for (let j = 0; j < input.length; j++) {
          const element = input[j][i];
          result.push(element !== undefined ? element : null);
      }
  }

  return result;
}